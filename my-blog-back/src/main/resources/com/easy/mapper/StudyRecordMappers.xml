<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.easy.mapper.StudyRecordMappers">
    <!-- 实体映射 -->
    <resultMap id="base_result_map" type="com.easy.entity.po.StudyRecord">
        <!-- 主键ID -->
        <id column="id" property="id"/>
        <!-- 用户ID -->
        <result column="user_id" property="userId"/>
        <!-- 标题 -->
        <result column="title" property="title"/>
        <!-- 内容 -->
        <result column="content" property="content"/>
        <!-- 创建时间 -->
        <result column="create_time" property="createTime"/>
        <!-- 更新时间 -->
        <result column="update_time" property="updateTime"/>
        <!-- 用户设置创建时间 -->
        <result column="study_date" property="studyDate" />

    </resultMap>

    <!-- 通用查询列 -->
    <sql id="base_column_list">
        id,user_id,title,content,create_time,update_time,study_date
    </sql>

    <!-- 基础查询条件 -->
    <sql id="base_query_condition">
        <if test="query.id != null">
            and id = #{query.id}
        </if>
        <if test="query.userId != null">
            and user_id = #{query.userId}
        </if>
        <if test="query.title != null and query.title != ''">
            and title = #{query.title}
        </if>
        <if test="query.content != null and query.content != ''">
            and content = #{query.content}
        </if>
        <if test="query.createTime != null">
            and create_time = #{query.createTime}
        </if>
        <if test="query.updateTime != null">
            and update_time = #{query.updateTime}
        </if>
        <if test="query.studyDate != null">
            and study_date = #{query.studyDate}
        </if>
    </sql>

    <!-- 扩展查询条件 -->
    <sql id="base_query_condition_extend">
        <if test="query.titleFuzzy != null and query.titleFuzzy != ''">
            and title like concat('%', #{query.titleFuzzy}, '%')
        </if>
        <if test="query.contentFuzzy != null and query.contentFuzzy != ''">
            and content like concat('%', #{query.contentFuzzy}, '%')
        </if>
        <if test="query.createTimeStart != null and query.createTimeStart != ''">
            <![CDATA[ and create_time >= str_to_date(#{query.createTimeStart}, '%Y-%m-%d') ]]>
        </if>
        <if test="query.createTimeEnd != null and query.createTimeEnd != ''">
            <![CDATA[ and create_time < date_add(str_to_date(#{query.createTimeEnd}, '%Y-%m-%d'), interval 1 day) ]]>
        </if>
        <if test="query.updateTimeStart != null and query.updateTimeStart != ''">
            <![CDATA[ and update_time >= str_to_date(#{query.updateTimeStart}, '%Y-%m-%d') ]]>
        </if>
        <if test="query.updateTimeEnd != null and query.updateTimeEnd != ''">
            <![CDATA[ and update_time < date_add(str_to_date(#{query.updateTimeEnd}, '%Y-%m-%d'), interval 1 day) ]]>
        </if>
        <if test="query.studyDateStart != null and query.studyDateStart != ''">
            <![CDATA[ and study_date >= str_to_date(#{query.studyDateStart}, '%Y-%m-%d') ]]>
        </if>
        <if test="query.studyDateEnd != null and query.studyDateEnd != ''">
            <![CDATA[ and study_date < date_add(str_to_date(#{query.studyDateEnd}, '%Y-%m-%d'), interval 1 day) ]]>
        </if>
    </sql>

    <!-- 综合查询条件 -->
    <sql id="query_condition">
        <where>
            <include refid="base_query_condition"/>
            <include refid="base_query_condition_extend"/>
        </where>
    </sql>

    <!-- 查询列表 -->
    <select id="selectList" resultMap="base_result_map" parameterType="com.easy.entity.query.StudyRecordQuery">
        SELECT <include refid="base_column_list"/> FROM study_record
        <include refid="query_condition"/>
        <if test="query.sortField != null and query.sortField != ''">
            ORDER BY
            <choose>
                <when test="query.sortOrder != null and (query.sortOrder == 'asc' or query.sortOrder == 'ASC')">
                    ${query.sortField} ASC
                </when>
                <otherwise>
                    ${query.sortField} DESC
                </otherwise>
            </choose>
        </if>
        <if test="query.simplePage != null">
            LIMIT #{query.simplePage.start}, #{query.simplePage.pageSize}
        </if>
    </select>



    <!-- 查询数量 -->
    <select id="selectCount" resultType="java.lang.Integer">
        SELECT count(1) FROM study_record
        <include refid="query_condition"/>
    </select>

    <!-- 单条插入 -->
    <insert id="insert" parameterType="com.easy.entity.po.StudyRecord">
        <selectKey keyProperty="bean.id" resultType="Integer" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO study_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bean.id != null">id,</if>
            <if test="bean.userId != null">user_id,</if>
            <if test="bean.title != null">title,</if>
            <if test="bean.content != null">content,</if>
            <if test="bean.createTime != null">create_time,</if>
            <if test="bean.updateTime != null">update_time,</if>
            <if test="bean.studyDate != null">study_date,</if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="bean.id != null">#{bean.id},</if>
            <if test="bean.userId != null">#{bean.userId},</if>
            <if test="bean.title != null">#{bean.title},</if>
            <if test="bean.content != null">#{bean.content},</if>
            <if test="bean.createTime != null">#{bean.createTime},</if>
            <if test="bean.updateTime != null">#{bean.updateTime},</if>
            <if test="bean.studyDate != null">#{bean.studyDate},</if>
        </trim>
    </insert>

    <!-- 插入或更新 -->
    <insert id="insertOrUpdate" parameterType="com.easy.entity.po.StudyRecord">
        INSERT INTO study_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bean.id != null">id,</if>
            <if test="bean.userId != null">user_id,</if>
            <if test="bean.title != null">title,</if>
            <if test="bean.content != null">content,</if>
            <if test="bean.createTime != null">create_time,</if>
            <if test="bean.updateTime != null">update_time,</if>
            <if test="bean.studyDate != null">study_date</if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="bean.id != null">#{bean.id},</if>
            <if test="bean.userId != null">#{bean.userId},</if>
            <if test="bean.title != null">#{bean.title},</if>
            <if test="bean.content != null">#{bean.content},</if>
            <if test="bean.createTime != null">#{bean.createTime},</if>
            <if test="bean.updateTime != null">#{bean.updateTime},</if>
            <if test="bean.studyDate != null">#{bean.studyDate},</if>
        </trim>
        ON DUPLICATE KEY UPDATE
        <trim suffixOverrides=",">
            <if test="bean.userId != null">user_id = VALUES(user_id),</if>
            <if test="bean.title != null">title = VALUES(title),</if>
            <if test="bean.content != null">content = VALUES(content),</if>
            <if test="bean.createTime != null">create_time = VALUES(create_time),</if>
            <if test="bean.updateTime != null">update_time = VALUES(update_time),</if>
            <if test="bean.studyDate != null">study_date = VALUES(study_date),</if>
        </trim>
    </insert>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="com.easy.entity.po.StudyRecord">
        INSERT INTO study_record(user_id,title,content,create_time,update_time,study_date) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.userId}, #{item.title}, #{item.content}, #{item.createTime}, #{item.updateTime}, #{item.studyDate})
        </foreach>
    </insert>

    <!-- 批量插入或更新 -->
    <insert id="insertOrUpdateBatch" parameterType="com.easy.entity.po.StudyRecord">
        INSERT INTO study_record(user_id,title,content,create_time,update_time,study_date) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.userId}, #{item.title}, #{item.content}, #{item.createTime}, #{item.updateTime}, #{item.studyDate})
        </foreach>
        ON DUPLICATE KEY UPDATE
        user_id = VALUES(user_id),
        title = VALUES(title),
        content = VALUES(content),
        create_time = VALUES(create_time),
        update_time = VALUES(update_time),
        study_date = VALUES(study_date)
    </insert>

    <!-- 根据Id查询 -->
    <select id="selectById" resultMap="base_result_map">
        SELECT <include refid="base_column_list"/> FROM study_record WHERE id = #{id}
    </select>

    <!-- 根据Id更新 -->
    <update id="updateById" parameterType="com.easy.entity.po.StudyRecord">
        UPDATE study_record
        <set>
            <if test="bean.id != null">id = #{bean.id},</if>
            <if test="bean.userId != null">user_id = #{bean.userId},</if>
            <if test="bean.title != null">title = #{bean.title},</if>
            <if test="bean.content != null">content = #{bean.content},</if>
            <if test="bean.createTime != null">create_time = #{bean.createTime},</if>
            <if test="bean.updateTime != null">update_time = #{bean.updateTime},</if>
            <if test="bean.studyDate != null">study_date = #{bean.studyDate},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据Id删除 -->
    <delete id="deleteById">
        DELETE FROM study_record WHERE id = #{id}
    </delete>

    <!-- 根据用户ID查询学习记录 -->
    <select id="selectByUserId" resultMap="base_result_map">
        SELECT <include refid="base_column_list"/> FROM study_record WHERE user_id = #{userId} ORDER BY create_time DESC
    </select>

</mapper>
